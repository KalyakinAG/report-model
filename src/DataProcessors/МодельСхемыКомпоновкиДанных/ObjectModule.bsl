//@skip-check object-module-export-variable
//@skip-check module-accessibility-at-client

//  Подсистема "Модель компоновки данных"
//	Автор: Калякин Андрей Г.
//  https://github.com/KalyakinAG/report-model
//  https://infostart.ru/

#Область ОписаниеПеременных

Перем СхемаКомпоновкиДанных Экспорт;
Перем НаборДанных;
Перем ПолеНабораДанных;
Перем ПолеРесурса;
Перем ВычисляемоеПоле;
Перем Раздел;
Перем Разделы;
Перем НомерПериода;
Перем Роль;
Перем ВнешниеНаборыДанных Экспорт;
Перем КолонкиНабораДанных;

#КонецОбласти

#Область ПрограммныйИнтерфейс

Функция НаборДанныхЗапрос(ТекстЗапроса, ИмяНабораДанных = "НаборДанных") Экспорт
	НаборДанных = СхемаКомпоновкиДанных.НаборыДанных.Добавить(Тип("НаборДанныхЗапросСхемыКомпоновкиДанных"));
	НаборДанных.Имя = ИмяНабораДанных;
	НаборДанных.АвтоЗаполнениеДоступныхПолей = Истина;
	НаборДанных.ИспользоватьГруппировкиЗапросаЕслиВозможно = Истина;
	НаборДанных.Запрос = ТекстЗапроса;
	НаборДанных.ИсточникДанных = "ИсточникДанных";
	Возврат ЭтотОбъект;
КонецФункции

Функция НаборДанныхОбъект(Данные, ИмяНабораДанных = "НаборДанных") Экспорт
	КолонкиНабораДанных = Данные.Колонки;
	ИмяОбъекта = ОбщийКлиентСервер.ИмяПоУникальномуИдентификатору();
	ВнешниеНаборыДанных.Вставить(ИмяОбъекта, Данные);
	НаборДанных = СхемаКомпоновкиДанных.НаборыДанных.Добавить(Тип("НаборДанныхОбъектСхемыКомпоновкиДанных"));
	НаборДанных.Имя = ИмяНабораДанных;
	НаборДанных.ИмяОбъекта = ИмяОбъекта;
	НаборДанных.ИсточникДанных = "ИсточникДанных";
	Возврат ЭтотОбъект;
КонецФункции

Функция Поле(ИмяПоля, Знач ПутьКДанным = Неопределено, Выражение = Неопределено, Заголовок = Неопределено) Экспорт
	Если НЕ ЗначениеЗаполнено(ПутьКДанным) Тогда
		ПутьКДанным = ИмяПоля;
	КонецЕсли;
	ПолеНабораДанных = НаборДанных.Поля.Добавить(Тип("ПолеНабораДанныхСхемыКомпоновкиДанных"));
	ПолеНабораДанных.Поле = ИмяПоля;
	ПолеНабораДанных.ПутьКДанным = ПутьКДанным;
	Роль = ПолеНабораДанных.Роль;
	Если Раздел = Разделы.Измерения Тогда
		ПолеНабораДанных.Роль.Измерение = Истина;
	ИначеЕсли Раздел = Разделы.Ресурсы Тогда
		ПолеРесурса = СхемаКомпоновкиДанных.ПоляИтога.Добавить();
		ПолеРесурса.ПутьКДанным = ПутьКДанным;
		ПолеРесурса.Выражение = Выражение;
	КонецЕсли;
	Если ЗначениеЗаполнено(Заголовок) Тогда
		ПолеНабораДанных.Заголовок = Заголовок;
	КонецЕсли;
	Если КолонкиНабораДанных <> Неопределено Тогда
		ПолеНабораДанных.ТипЗначения = КолонкиНабораДанных[ИмяПоля].ТипЗначения;		
	КонецЕсли;
	Возврат ЭтотОбъект;
КонецФункции

Функция ТипЗначения(Тип) Экспорт
	ПолеНабораДанных.ТипЗначения = Тип;
	Возврат ЭтотОбъект;
КонецФункции

Функция ВычисляемоеПоле(ИмяПоля, Знач ПутьКДанным = Неопределено, Выражение, ВыражениеИтога = Неопределено, Заголовок = Неопределено) Экспорт
	Если НЕ ЗначениеЗаполнено(ПутьКДанным) Тогда
		ПутьКДанным = ИмяПоля;
	КонецЕсли;
	ВычисляемоеПоле = СхемаКомпоновкиДанных.ВычисляемыеПоля.Добавить();
	ВычисляемоеПоле.ПутьКДанным = ПутьКДанным;
	ВычисляемоеПоле.Выражение = Выражение;
	Если Раздел = Разделы.Ресурсы Тогда
		ПолеРесурса = СхемаКомпоновкиДанных.ПоляИтога.Добавить();
		ПолеРесурса.ПутьКДанным = ПутьКДанным;
		ПолеРесурса.Выражение = ?(ЗначениеЗаполнено(ВыражениеИтога), ВыражениеИтога, СтрШаблон("СУММА(%1)", ИмяПоля));
	КонецЕсли;
	Если ЗначениеЗаполнено(Заголовок) Тогда
		ВычисляемоеПоле.Заголовок = Заголовок;
	КонецЕсли;
	Возврат ЭтотОбъект;
КонецФункции

Функция Обязательное() Экспорт
	Роль.Обязательное = Истина;
	Возврат ЭтотОбъект;
КонецФункции

Функция Сумма(ИмяПоля, Знач ПутьКДанным = Неопределено) Экспорт
	Поле(ИмяПоля, ПутьКДанным, СтрШаблон("СУММА(%1)", ?(ЗначениеЗаполнено(ПутьКДанным), ПутьКДанным, ИмяПоля)));
	Возврат ЭтотОбъект;
КонецФункции

Функция НачальныйОстаток(ИмяПоля, Знач ПутьКДанным = Неопределено, ИмяРесурса) Экспорт
	Если Раздел <> Разделы.Ресурсы Тогда
		ВызватьИсключение "Ресурсы указываются в разделе Ресурсов";
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ИмяРесурса) Тогда
		ВызватьИсключение "Для остатка необходимо определить имя ресурса";
	КонецЕсли;
	Сумма(ИмяПоля, ПутьКДанным);
	Роль.Остаток = Истина;
	Роль.ТипОстатка = ТипОстаткаКомпоновкиДанных.НачальныйОстаток;
	Роль.ГруппаОстатка = ИмяРесурса;
	Возврат ЭтотОбъект;
КонецФункции

Функция КонечныйОстаток(ИмяПоля, Знач ПутьКДанным = Неопределено, ИмяРесурса) Экспорт
	Если Раздел <> Разделы.Ресурсы Тогда
		ВызватьИсключение "Ресурсы указываются в разделе Ресурсов";
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ИмяРесурса) Тогда
		ВызватьИсключение "Для остатка необходимо определить имя ресурса";
	КонецЕсли;
	Сумма(ИмяПоля, ПутьКДанным);
	Роль.Остаток = Истина;
	Роль.ТипОстатка = ТипОстаткаКомпоновкиДанных.КонечныйОстаток;
	Роль.ГруппаОстатка = ИмяРесурса;
	Возврат ЭтотОбъект;
КонецФункции


// Период.
// 
// Параметры:
//  ИмяПоля - Строка - Имя поля
//  ПутьКДанным - Строка -  Путь к данным
//  Дополнительный - Булево -  данный период не определяет порядок для дочернего периода. Например
//   для секунды период день не является необходимым для порядка. Для Регистратора наоборот родительский период Секунда
//   определяет порядок
// 
// Возвращаемое значение:
//  ОбработкаОбъект.МодельСхемыКомпоновкиДанных -  Период
Функция Период(ИмяПоля, Знач ПутьКДанным = Неопределено, Дополнительный = Ложь) Экспорт
	Поле(ИмяПоля, ПутьКДанным);
	НомерПериода = НомерПериода + 1;
	ПолеНабораДанных.Роль.НомерПериода = НомерПериода;
	ПолеНабораДанных.Роль.ТипПериода = ?(Дополнительный, ТипПериодаКомпоновкиДанных.Дополнительный, ТипПериодаКомпоновкиДанных.Основной);
	Возврат ЭтотОбъект;
КонецФункции

Функция Параметр(Имя, Заголовок = "") Экспорт
	ПараметрСхемы = СхемаКомпоновкиДанных.Параметры.Добавить();
	ПараметрСхемы.Имя = Имя;
	Если ЗначениеЗаполнено(Заголовок) Тогда
		ПараметрСхемы.Заголовок = Заголовок;
	КонецЕсли;
	ПараметрСхемы.ВключатьВДоступныеПоля = Истина;
	ПараметрСхемы.Использование = ИспользованиеПараметраКомпоновкиДанных.Авто;
	Возврат ЭтотОбъект;
КонецФункции

Функция Измерения() Экспорт
	Раздел = Разделы.Измерения;
	НомерПериода = 0;
	Возврат ЭтотОбъект;
КонецФункции

Функция Реквизиты() Экспорт
	Раздел = Разделы.Реквизиты;
	Возврат ЭтотОбъект;
КонецФункции

Функция Ресурсы() Экспорт
	Раздел = Разделы.Ресурсы;
	Возврат ЭтотОбъект;
КонецФункции

#КонецОбласти

#Область Инициализация

СхемаКомпоновкиДанных = Новый СхемаКомпоновкиДанных;
Разделы = Новый Структура("Измерения, Реквизиты, Ресурсы", 1, 2, 3);

//  Добавление источника данных по-умолчанию
ИсточникДанных = СхемаКомпоновкиДанных.ИсточникиДанных.Добавить();
ИсточникДанных.Имя = "ИсточникДанных";
ИсточникДанных.ТипИсточникаДанных = "Local";

ВнешниеНаборыДанных = Новый Структура;

#КонецОбласти